# NGINX Ingress Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  labels:
    app: nginx-ingress
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller:v1.8.1 # Use latest compatible version
          args:
            - /nginx-ingress-controller
            - --gateway-api
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254

---
# NGINX Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-service
  labels:
    app: nginx-ingress
spec:
  type: LoadBalancer
  selector:
    app: nginx-ingress
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443

---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: GatewayClass
metadata:
  name: nginx
  spec:
    controllerName: ingress-nginx.io/gateway-controller
---
# Gateway Resource
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: nginx-gateway
  labels:
    app: nginx-gateway
  spec:
    gatewayClassName: nginx # Use NGINX GatewayClass
    listeners:
      - name: http
        protocol: HTTP
        port: 80
        allowedRoutes:
          namespaces:
            from: All
          kinds:
            - kind: HTTPRoute
      - name: https
        protocol: HTTPS
        port: 443
        tls:
          mode: Terminate
          certificateRefs:
            - name: tls-secret # Replace with your TLS secret name
        allowedRoutes:
          namespaces:
            from: All
          kinds:
            - kind: HTTPRoute

---
# HTTPRoute Resource
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: nginx-http-route
spec:
  parentRefs:
    - name: nginx-gateway
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: my-backend-service # Replace with your service name
          port: 80

---
# Example Backend Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-backend-service
  labels:
    app: my-backend-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-backend-service
  template:
    metadata:
      labels:
        app: my-backend-service
    spec:
      containers:
        - name: app
          image: nginx # Simple NGINX as backend
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: my-backend-service
spec:
  selector:
    app: my-backend-service
  ports:
    - port: 80
      targetPort: 80
