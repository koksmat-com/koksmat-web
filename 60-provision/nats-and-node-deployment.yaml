---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
        - name: nats
          image: nats:2.9.15-alpine
          ports:
            - containerPort: 4222
            - containerPort: 8222
            - containerPort: 6222

---
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
    - name: client
      port: 4222
      targetPort: 4222
    - name: monitoring
      port: 8222
      targetPort: 8222
    - name: cluster
      port: 6222
      targetPort: 6222

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
data:
  .nats.conf: |
    url: nats://nats:4222
    allow_reconnect: true
    max_reconnect_attempts: -1
    reconnect_wait: 2s

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-box
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-box
  template:
    metadata:
      labels:
        app: nats-box
    spec:
      containers:
        - name: nats-box
          image: natsio/nats-box:latest
          command: ["/bin/sh", "-c", "while true; do sleep 30; done;"]
          env:
            - name: NATS_URL
              value: "nats://nats:4222"
          volumeMounts:
            - name: nats-config
              mountPath: /etc/nats
      volumes:
        - name: nats-config
          configMap:
            name: nats-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-box
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-box
  template:
    metadata:
      labels:
        app: node-box
    spec:
      containers:
        - name: node-box
          image: node:18-alpine
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Creating sample CLI..."
              mkdir -p /app
              cat << EOF > /app/cli.js
              #!/usr/bin/env node
              const readline = require('readline');

              const rl = readline.createInterface({
                input: process.stdin,
                output: process.stdout
              });

              function promptUser() {
                rl.question('Enter a command (hello, date, exit): ', (answer) => {
                  switch(answer.toLowerCase()) {
                    case 'hello':
                      console.log('Hello, World!');
                      break;
                    case 'date':
                      console.log(new Date().toLocaleString());
                      break;
                    case 'exit':
                      console.log('Goodbye!');
                      rl.close();
                      return;
                    default:
                      console.log('Unknown command. Try again.');
                  }
                  promptUser();
                });
              }

              console.log('Welcome to the sample CLI!');
              promptUser();
              EOF
              chmod +x /app/cli.js
              echo "Sample CLI created. Executing..."
              node /app/cli.js
